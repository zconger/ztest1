apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f /Users/zconger/git/github/stackhawk/raptor-ui/devkube_tmp/services/beak-service.yml
      --out /Users/zconger/git/github/stackhawk/raptor-ui/devkube_tmp/manifests/
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: postgres-beak
  name: postgres-beak
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-beak
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f /Users/zconger/git/github/stackhawk/raptor-ui/devkube_tmp/services/beak-service.yml
          --out /Users/zconger/git/github/stackhawk/raptor-ui/devkube_tmp/manifests/
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: postgres-beak
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: beak
        - name: POSTGRES_PASSWORD
          value: testlab
        - name: POSTGRES_USER
          value: beakadmin
        image: postgres:latest
        imagePullPolicy: ""
        name: postgres-beak
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d
          name: init-dir
      restartPolicy: Always
      serviceAccountName: devkube-db
      volumes:
      - name: initdb
        emptyDir: {}
      initContainers:
      - name: postgres-init
        image: amazon/aws-cli
        command:
        - "aws"
        args:
        - s3
        - cp
        - "s3://backups.sandbox.stackhawk.com/devkube/zconger/postgres/beak.sql"
        - /docker-entrypoint-initdb.d/
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d
          name: init-dir
status: {}
